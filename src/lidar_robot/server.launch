<?xml version="1.0"?>
<launch>
    <arg name="port" default="/dev/ttyACM0"/>
    <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find lidar_robot)/xacro/robot.xacro'"/>
    <param name="use_gui" value="true"/>

    <node name="tf_broadcaster" pkg="lidar_robot" ns="lidar_robot" type="tf_broadcaster" output="screen"/>

    <!--<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen"/>-->
    <!--<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" output="screen">
        <rosparam param="source_list">['/web_joint_states',]</rosparam>
    </node>
-->
    <!-- ============================================================= Gazebo ================================================================================ -->
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model lidar_robot"/>

    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="verbose" value="false"/>
        <arg name="paused" value="false"/>
    </include>

    <!-- Load joint controller configurations from YAML file to parameter server -->
    <rosparam file="$(find lidar_robot)/extras/lidar_robot_control.yaml" command="load"/>

    <!-- load the controllers -->
    <node
        name="controller_spawner"
        pkg="controller_manager"
        type="spawner"
        respawn="false"
        output="screen"
        ns="/lidar_robot"
        args="motor_shaft_1_velocity_controller motor_shaft_2_velocity_controller motor_shaft_3_velocity_controller motor_shaft_4_velocity_controller joint_state_controller"/>

    <!-- convert joint states to TF transforms for rviz, etc -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
        <remap from="/joint_states" to="/lidar_robot/joint_states"/>
    </node>

    <!-- ============================================================= RViz ================================================================================ -->

    <node name="rviz" pkg="rviz" required="true" args="-d $(find lidar_robot)/extras/config.rviz" type="rviz"/>

    <!-- ============================================================= Web server Connectors =============================================================== -->
    <include file="$(find rosbridge_server)/launch/rosbridge_websocket.launch">
        <arg name="port" value="9090"/>
    </include>
    <node name="tf2_web_republisher" pkg="tf2_web_republisher" type="tf2_web_republisher" output="screen"/>

    <!--  <node name="base" pkg="lidar_robot" ns="lidar_robot" type="base" output="screen"/>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
        <rosparam param="source_list">['/web_joint_states',]</rosparam>
    </node>
    <node name="tf2_web_republisher" pkg="tf2_web_republisher" type="tf2_web_republisher"/>
  -->
    <!--  <node name="odom_broadcaster" pkg="lidar_robot" ns="lidar_robot" type="odom_broadcaster" output="screen"/>-->
    <!--
    <node name="serial_node" pkg="rosserial_python" ns="lidar_robot" type="serial_node.py" args="$(arg port)" respawn="true"/>
    <node name="rplidar" pkg="rplidar_ros" ns="lidar_robot" type="rplidarNode" respawn="false"/>
  -->
    <!--<include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find lidar_robot)/extras/worlds/myworld.world"/>
    </include>
-->

</launch>
