<?xml version="1.0"?>
<launch>
    <arg name="port" default="/dev/ttyACM0"/>
    <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find lidar_robot)/xacro/robot.xacro'"/>
    <param name="use_gui" value="false"/>

    <!--<node name="tf_broadcaster" pkg="lidar_robot" ns="lidar_robot" type="tf_broadcaster"/>-->
    <!--<node name="gazebo_driver" pkg="lidar_robot" ns="lidar_robot" type="gazebo_driver" output="screen"/>-->

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" output="screen">
        <rosparam param="source_list">['/web_joint_states',]</rosparam>
    </node>

    <!-- ============================================================= Gazebo ======================================================================== -->
    <node pkg="tf" type="static_transform_publisher" name="map_odom_broadcaster" args="0 0 0 0 0 0 map odom 100"/>
    <!--<node pkg="tf" type="static_transform_publisher" name="odom_base_broadcaster" args="0 0 0 0 0 0 odom base_link 100"/>-->

    <!-- ============================================================= Gazebo ======================================================================== -->
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model lidar_robot"/>

    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <!--<arg name="world_name" value="worlds/willowgarage.world"/>-->
        <!--<arg name="verbose" value="false"/>
        <arg name="paused" value="false"/>-->
    </include>
    <!-- ============================================================= RViz ========================================================================= -->

    <node name="rviz" pkg="rviz" required="true" args="-d $(find lidar_robot)/extras/config.rviz" type="rviz"/>

    <!-- ====================================================== Web server Connectors =============================================================== -->
    <include file="$(find rosbridge_server)/launch/rosbridge_websocket.launch">
        <arg name="port" value="9090"/>
    </include>
    <node name="tf2_web_republisher" pkg="tf2_web_republisher" type="tf2_web_republisher"/>

    <!-- ====================================================== Hector Slam  ======================================================================== -->
    <node pkg="hector_mapping" type="hector_mapping" name="hector_height_mapping" output="screen">
        <param name="scan_topic" value="/scan"/>
        <param name="base_frame" value="base_link"/>
        <param name="output_timing" value="false"/>
        <param name="use_tf_scan_transformation" value="true"/>
        <param name="use_tf_pose_start_estimate" value="false"/>

        <param name="advertise_map_service" value="true"/>

        <param name="map_with_known_poses" value="true"/>
        <param name="map_pub_period" value="1.0"/>

        <param name="laser_z_min_value" value="-0.3"/>

        <param name="update_factor_free" value="0.3"/>

        <param name="map_resolution" value="0.05"/>
        <param name="map_size" value="4096"/>
        <param name="map_start_x" value="0.5"/>
        <param name="map_start_y" value="0.5"/>
        <param name="map_multi_res_levels" value="3"/>

        <remap from="map" to="scanmatcher_map"/>
        <param name="pub_drawings" value="true"/>
        <param name="pub_debug_output" value="true"/>
        <param name="hector_mapping/odom_frame" value="odom2"/>
        <param name="hector_mapping/pub_map_odom_transform" value="false"/>

    </node>

    <!--  <node name="base" pkg="lidar_robot" ns="lidar_robot" type="base" output="screen"/>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
        <rosparam param="source_list">['/web_joint_states',]</rosparam>
    </node>
    <node name="tf2_web_republisher" pkg="tf2_web_republisher" type="tf2_web_republisher"/>
  -->
    <!--  <node name="odom_broadcaster" pkg="lidar_robot" ns="lidar_robot" type="odom_broadcaster" output="screen"/>-->
    <!--
    <node name="serial_node" pkg="rosserial_python" ns="lidar_robot" type="serial_node.py" args="$(arg port)" respawn="true"/>
    <node name="rplidar" pkg="rplidar_ros" ns="lidar_robot" type="rplidarNode" respawn="false"/>
  -->
    <!--<include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find lidar_robot)/extras/worlds/myworld.world"/>
    </include>
-->

</launch>
